version: 2.1
orbs:
  node: circleci/node@1.1.6
commands:
  deploy:
    description: "deploy"
    parameters:
      stage:
        type: string
    steps:
      - restore_cache:
          keys:
            - asset-cache-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: "deploy << parameters.stage >>"
          command: ./scripts/serverless-deploy << parameters.stage >>
          environment:
            NODE_APP_INSTANCE: deployed

jobs:
  build-and-test:
    docker:
      - image: circleci/node:13
        environment:
          AWS_ACCESS_KEY_ID: localstack
          AWS_SECRET_ACCESS_KEY: localstack
      - image: localstack/localstack
        environment:
          DEBUG: 1
          SERVICES: s3,sqs
    executor:
      name: node/default
    steps:
      - checkout
      - run: "./scripts/prebuild-check"
      - node/with-cache:
          steps:
            - run: echo 'export PATH=./opt/:$PATH' >> $BASH_ENV
            - run: npm install
            - run: npm run build
            - run: npm run build:storybook
            - run: npm test
            - save_cache:
                key: asset-cache-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                  - public
                  - opt

  pack:
    docker:
      - image: circleci/node:13
    executor:
      name: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - asset-cache-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - node/with-cache:
          steps:
            - run: npm pack

  component-test:
    docker:
      - image: circleci/node:13
        environment:
          AWS_ACCESS_KEY_ID: localstack
          AWS_SECRET_ACCESS_KEY: localstack
      - image: localstack/localstack
        environment:
          DEBUG: 1
          SERVICES: s3,sqs
    executor:
      name: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - asset-cache-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
      - node/with-cache:
          steps:
            - run:
                command: npm run test:integration
                no_output_timeout: "2m"

  deploy:
    docker:
      - image: circleci/node:13
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - deploy:
                stage: dev
            - deploy:
                stage: production

  deploy_branch:
    docker:
      - image: circleci/node:13
    executor:
      name: node/default
    steps:
      - checkout
      - node/with-cache:
          steps:
            - deploy:
                stage: "pr-${CIRCLE_PULL_REQUEST##*/}"

workflows:
    build-and-test:
      jobs:
        - build-and-test
        - pack:
            requires:
              - build-and-test
        - component-test:
            requires:
              - build-and-test
        - deploy_branch:
            requires:
               - build-and-test
               - component-test
               - pack
            context: "aws.amazon.com/alexjpaz/circleci"
            filters:
              branches:
                only: /feature\/.*/
        - deploy:
            requires:
               - build-and-test
               - component-test
               - pack
            context: "aws.amazon.com/alexjpaz/circleci"
            filters:
              branches:
               only: master
