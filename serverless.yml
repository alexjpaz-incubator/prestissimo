service: prestissimo

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  apiKeys:
    - free:
      - ${opt:stage}-free
    - paid:
      - ${opt:stage}-paid
    - test:
      - ${opt:stage}-test
  usagePlan:
    - free:
        quota:
          limit: 100
          period: DAY
        throttle:
          burstLimit: 10
          rateLimit: 10
    - paid:
        quota:
          limit: 1000
          offset: 1
          period: DAY
        throttle:
          burstLimit: 10
          rateLimit: 10
  deploymentBucket:
    name: shared-private-bucket.alexjpaz.com
  environment:
    awsBucket: "${self:custom.bucketName}"

  s3:
    stagingBucket:
      name: "${self:custom.bucketName}"
      corsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - PUT
              - POST
            AllowedOrigins:
              - "*"

  iamRoleStatements:
   - Effect: "Allow"
     Action:
       - "s3:*"
     Resource: "arn:aws:s3:::${self:custom.bucketName}/*"

custom:
  bucketName: ${self:service}-${self:provider.stage}

plugins:
  - serverless-offline

functions:
  httpRouter:
    handler: src/http/index.router
    events:
      - http:
          path: "{proxy+}"
          method: any
          private: true
      - http:
          path: "/"
          method: any
          private: true
  convert:
    handler: handler.convert
    events:
      - s3:
          bucket: stagingBucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploads/raw/
